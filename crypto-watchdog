import logging
import requests
from telegram import Update, BotCommand
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from flask import Flask

# إعداد التوكن والمعرفات
BOT_TOKEN = "7863509137:AAHBuRbtzMAOM_yBbVZASfx-oORubvQYxY8"
ALLOWED_USERS = [7863509137]  # قائمة المعرفات المسموح بها فقط

# إعداد Flask لتشغيل البوت مجانًا على Render
flask_app = Flask(__name__)

@flask_app.route('/')
def index():
    return 'Crypto Watchdog is running.'

# أمر /crypto لعرض بيانات عملة محددة
async def crypto_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id not in ALLOWED_USERS:
        return

    if len(context.args) == 0:
        await update.message.reply_text("استخدم الأمر بهذا الشكل:\n/crypto bitcoin")
        return

    coin = context.args[0].lower()
    url = f"https://api.coingecko.com/api/v3/simple/price?ids={coin}&vs_currencies=usd"
    response = requests.get(url)

    if response.status_code == 200 and coin in response.json():
        price = response.json()[coin]['usd']
        await update.message.reply_text(f"سعر {coin.upper()} الآن: ${price}")
    else:
        await update.message.reply_text("لم يتم العثور على العملة المطلوبة.")

# أمر /top لعرض أعلى 5 عملات من حيث القيمة السوقية
async def top_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id not in ALLOWED_USERS:
        return

    url = "https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=5&page=1"
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        message = "أعلى 5 عملات حاليًا:\n"
        for coin in data:
            name = coin['name']
            price = coin['current_price']
            message += f"{name}: ${price}\n"
        await update.message.reply_text(message)
    else:
        await update.message.reply_text("حدث خطأ أثناء جلب البيانات.")

# إعداد التطبيق
if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # إضافة الأوامر
    app.add_handler(CommandHandler("crypto", crypto_command))
    app.add_handler(CommandHandler("top", top_command))

    # تسجيل الأوامر في تيليجرام
    async def set_commands():
        await app.bot.set_my_commands([
            BotCommand("crypto", "عرض سعر عملة معينة"),
            BotCommand("top", "عرض أعلى 5 عملات")
        ])

    import asyncio
    asyncio.run(set_commands())

    # تشغيل البوت و Flask معًا على Render
    import threading
    threading.Thread(target=lambda: flask_app.run(host='0.0.0.0', port=10000)).start()
    app.run_polling()
